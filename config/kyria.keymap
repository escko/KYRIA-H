/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define BLUE    3

/{
left_encoder: encoder_left {
		compatible = "alps,ec11";
		label = "LEFT_ENCODER";
		a-gpios = <&pro_micro_d 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&pro_micro_d 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		resolution = <2>;
		status = "okay";
    	};

top_encoder: encoder_left1 {
		compatible = "alps,ec11";
		label = "TOP_ENCODER";
		a-gpios = <&pro_micro_d 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&pro_micro_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		resolution = <2>;
		status = "okay";
    	};

    	sensors {
        	    compatible = "zmk,keymap-sensors";
        	    sensors = <&left_encoder &top_encoder>;
   	};
};


//&left_encoder { resolution = <2>; };
// &right_encoder { resolution = <1>; };

&mt {
    tapping-term-ms = <129>;
};

&lt {
    tapping-term-ms = <129>;
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp N2>, <&kp N3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &td0
            >;
        };
    };
};
&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <8>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};


/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans    &kp B &kp Z &kp E &kp C &kp N0                                              &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans    &kp Q &kp X &kp V &kp S &kp A                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&trans    &kp BACKSLASH &kp COMMA &kp F &kp T &kp SLASH &kp LGUI &kp LALT               &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	              &kp P &mo RAISE &mo LOWER &kp LSHFT &kp SPACE                   &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp LBKT RBKT &inc_dec_kp DOWN UP>;
		};
		lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans       &kp I &kp O &kp BACKSPACE &kp Y &trans                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans       &kp J &kp K &trans &kp D &kp U                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
		&trans   &kp R &trans &kp LC(UP_ARROW) &kp C_PLAY_PAUSE &mo BLUE &trans &trans                &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &trans &trans &trans &trans &trans                                      &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LEFT RIGHT>;
		};
		raise_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans      &trans &kp LG(C) &kp LG(V) &kp LG(X) &trans                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans      &trans &trans &trans &trans &trans                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&trans      &trans &trans &trans &trans &trans &trans &trans                &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                   &trans &trans &trans &trans &trans                                      &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};
        blue_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &rgb_ug RGB_HUI &rgb_ug RGB_HUD                                                             &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans    &trans &trans &trans &rgb_ug RGB_SAI &rgb_ug RGB_SAD                                                                      &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&trans    &trans &trans &trans &trans &trans &rgb_ug RGB_TOG &bt BT_CLR                &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &trans &trans &trans &rgb_ug RGB_BRD &rgb_ug RGB_BRI                                                         &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

		};
	};
};

